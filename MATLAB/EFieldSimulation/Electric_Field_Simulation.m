% MATLAB Research Project Week 2 Assignment
% Ian Hay
% 2-1-2019

% Goal: Create a program that can plot the interference
% of a scatter point on a 2D area with color mapping
% for intensity for the following plots:
% magnitude, phase, real, and imaginary

e = 2.718;
PI = 3.14;

% x,y points of the scatter point
scatter_point_x1 = 0;
scatter_point_y1 = 0;

scatter_point_x2 = 4;
scatter_point_y2 = 8;

scatter_point_x3 = -5;
scatter_point_y3 = 5;

scatter_point_x4 = 1;
scatter_point_y4 = 6;

scatter_point_x5 = 5;
scatter_point_y5 = 5;

% cross section constant of the scatter point (how much the point displaces
% waves)
cross_section_constant1 = 0.1;
cross_section_constant2 = 0.1;
%initial e-field generated by the transmitter
E_field_start = 5;

%grid off;

%meshgrid: creates grid of points for y,x
[x,y] = meshgrid(-5:0.1:5,0:0.1:8);

E = E_field_start * e.^(j * x);

%E = cross_section_constant * (E_field_s .^ (j * (2 * PI) * (x - scatter_point_x)));
% ^ wrong

% (e ^ -jkr)/r (where r is the distance from the point to the scatterer)
% k = 2PI
% calculates the E-field displaced by the scatter point
r1 = (sqrt(((x - scatter_point_x1).^2) + ((y - scatter_point_y1).^2)));
r2 = (sqrt(((x - scatter_point_x2).^2) + ((y - scatter_point_y2).^2)));
r3 = (sqrt(((x - scatter_point_x3).^2) + ((y - scatter_point_y3).^2)));
r4 = (sqrt(((x - scatter_point_x4).^2) + ((y - scatter_point_y4).^2)));
r5 = (sqrt(((x - scatter_point_x5).^2) + ((y - scatter_point_y5).^2)));


Es1 = cross_section_constant1 * E(41,41) * ((e .^ -(j * (2 * PI) .* r1)) ./ r1);

Es2 = cross_section_constant2 * E(41,41) * ((e .^ -(j * (2 * PI) .* r2)) ./ r2);

Es3 = cross_section_constant1 * E(41,41) * ((e .^ -(j * (2 * PI) .* r3)) ./ r3);

Es4 = cross_section_constant1 * E(41,41) * ((e .^ -(j * (2 * PI) .* r4)) ./ r4);

Es5 = cross_section_constant1 * E(41,41) * ((e .^ -(j * (2 * PI) .* r5)) ./ r5);


%plots the magnitude subplot
%subplot(2,2,1);
%pcolor(abs(Es));
%axis image, shading interp;
%colorbar;

%plots the phase subplot
%subplot(2,2,2);
%pcolor(angle(E+Es));
%axis image, shading interp;
%colorbar;

%plots the real component of the E-field
%subplot(2,2,3);
%pcolor(real(E+Es));
%axis image, shading interp;
%colorbar;

%plots the imaginary component of the E-field
%subplot(2,2,4);
%pcolor(imag(E+Es));
%axis image, shading interp;
%colorbar;

%surf(x,y,(abs(E+Es)));



% full complex value E(x,y)
% Er = real part of E
% E * e^j(omega)t

%omega: 2PI/period
%t = period / N-pieces * n
% N = 12 frames

% Er of E * e^j(omega)t


%N = 12;
%for n = 1 : N
   % surf(x,y,(real((Es1 + Es2) * (e .^ -(j * ((2 * PI)/N) * n)))));
  %  axis([-5,5,0,8,-1.5,1.5]);
  %  shading interp;
 %   M(n) = getframe;
%
%end
%movie(M,50000,12);

%Est = Es1 + Es2;

%plots the real component of the E-field
subplot(1,2,1);
pcolor(real(Es1+Es2+Es3+Es4+Es5));
axis image, shading interp;
colorbar;

%plots the imaginary component of the E-field
subplot(1,2,2);
pcolor(imag(Es1+Es2+Es3+Es4+Es5));
axis image, shading interp;
colorbar;

surf(x,y,(real(Es1+Es2+Es3+Es4+Es5)));

lastRow = Es1(81,:) + Es2(81,:) + Es3(81,:) + Es4(81,:) + Es5(81,:);



% clean the movie
% adjust the limit to remove the actual scatter and limit the height to 1.5
% ^ axis command

% begin analyzing data received at the end of the scan to notice any
% obvious differences as the cross-section-constant is changed
